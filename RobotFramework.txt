#############5-May-2025#############
Section 1: Introduction to Robot Framework and its advantages



1. What is Robot Framework and its advantages

Data Driven , 
Behvaiour Driven ,
Keyword Driven 


2. Course objectives- What you will learn from this tutorial

Selenium Library - 70%
API Testing Library - 20%
Database Test Library  - 10%


Section 2: Install and Configure  Robot Framework with Python for Local setup

4. Install Python and its related configurations in Global variables
5.mac related

6. Install Robot Framework & Selenium Libraries to setup the Project
Robot Framework setup and configurations
-Install Python 
-Set Python Environment Varialbles
-Install Robot Framework
 pip install robotframework 
-Install Selenium Library 
 pip install upgrade robotframework-selenium library 
-Install Pycharm 
-Create new project in pycharm 
-Add Robot extension to pycharm 
 HyperRobot Plugin 
-Create file with robot.extension 

File Settings-> Python interpreter 

8. Getting started with .robot file syntaxes and its templates
testDemo1.robot file creation 
https://rahulshettyacademy.com/loginpagePractise/
testCases - is collection of keywords in robot framework 

*** Settings ***
Documentation     To validate the Login form
Library    		  SeleniumLibrary

*** Test Cases ***
Validate successful Login
    Open Mortgage browser and provide Login credentials 
     
############Section 3: Getting Started with Robot Framework Tests with Keywords & Variables
Download Chrome Driver 

9. Invoking Browsers for Web Automation with Selenium using Robot Keyword
https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Open%20Browser
Create Webdriver executable_path=c/user/driverpath
above is outdated now
Selenium itself will find driver and execute it now 
Create Webdriver    Chrome

https://rahulshettyacademy.com/loginpagePractise/
rahulshettyacademy
learning

RobotFramework supports  id, xpath and css 
Input Password can be used , it will not generate password in log files 

Added Below code 

*** Keywords ***
Open the browser with Mortgage Payment URL
    Create Webdriver    Chrome
    Go To    https://rahulshettyacademy.com/loginpagePractise/

Fill the login form
    Input Text    id:username    rahulshettyacademy
    Input Password    id:password
    Click Button    signInBtn
	
Running the test 
go to folder location and execute command .
robot filename.robot 

10. Learning Synchronization Robot keywords & error messages validations
6-May-2025 
External and Standard Libraries in Robot Framework 

Cucumber - write code to build login
Robot Framework - we will use just keywords 


wait until it checks display error message
    Wait Until Element Is Visible    css:.alert-danger

verify error message is corrected
    ${result}=    Get Text    css:.alert-danger
    Should Be Equal As Strings    ${result}    Incorrect username/password.
	
Should Be Equal As Strings - this is build in keyword 

11. How to declare and use the variables in the Robot files for global use

*** Variables ***
${Error_Message_Login}    css:.alert-danger

*** Settings ***
Documentation     To validate the Login form
Library    SeleniumLibrary
Test Teardown    Close Browser


12. Importance of Resource files/keyword in centralizing the reusable code
7-May-2025
First check availability of keyword in local file and then in resource file
resource.robot 
and testDemo2.robot files used 

13.How to send Arguments to keywords from the Test and from the variables
Verify card titles is displayed as expected .
*** Test Cases ***
Validate Unsuccessful Login
    Fill the Login form    ${username}    ${validPassword}

Fill the login form
    [Arguments]    ${username}    ${password}
    Input Text    id:username    ${username}
    Input Password    id:password    ${password}
    Click Button    signInBtn
	
wait until element is visible
    [Arguments]    ${element}
    Wait Until Element Is Visible    ${element}
	
*** Test Cases ***
Validate Unsuccessful Login
    Fill the Login form    ${username}    ${InvalidPassword}
    wait until element is visible    ${Error_Message_Login}
    verify error message is corrected

Verify Cards display in shopping Page
    Fill the Login form    ${username}    ${validPassword}
    wait until element is visible    ${shop_page_load} 


######Section 4: Selenium Functional Automation using Robot Framework Keywords
14. How to retrieve the list of webelements using Robot Framework - example
Use Create List built in keyword to keep track of expected elements 

Review Log file 
15 mins for below code 

Verify card titles in the shop page
    @{expectedList} =    Create List    iphone X    Samsung Note 8     Nokia Edge    Blackberry
    @{elements} =    Get Webelements    css:.card-title
    FOR    ${ele}    IN    @{elements}
        Log    ${ele.text}
    END

15. Using Collections Library of Robot Framework to build functional logic
Library - Collections 
while creating list use @
while using use $ 

Verify card titles in the shop page
    @{expectedList} =    Create List    iphone X    Tamsung Note 8     Nokia Edge    Blackberry
    @{elements} =    Get Webelements    css:.card-title
    @{actualList} =    Create List
    FOR    ${ele}    IN    @{elements}
        Log    ${ele.text}
        Append To List    ${actualList}    ${ele.text}
    END
    Lists Should Be Equal     ${expectedList}    ${actualList}

16. Generating dynamic locators to solve the problem with Robot keywords
First find the xpath of add to card button 
Selecting particular mobile and adding to cart logic


//*[@class='card-footer']
(//*[@class='card-footer']/button)[4]

//tag[@attribute='value']

Select the card
    [Arguments]    ${cardname}
    ${index} =    Set Variable    1
    @{elements} =    Get Webelements    css:.card-title
    FOR    ${ele}    IN    @{elements}
        Exit For Loop If    '${cardname}' == '${ele.text}'
            ${index}=    Evaluate    ${index} + 1
            Log    ${ele.text}
    END
    Click Button    xpath:(//*[@class='card-footer']/button)[${index}]


testDemo2.robot file 

17. Handling Dropdowns of web pages with Robot Selenium keywords
Dropdown 
Radio Button 
CheckBoxes 
Child Window Control 
When we select user - pop is coming that will handle
https://rahulshettyacademy.com/loginpagePractise/ 
Select from index, label, value 
//select[@class='form-control']
//input[@value='user']
Fill the login details and select the form
    Input Text    id:username    rahulshettyacademy
    Input Password    id:password    learning
    Click Element    xpath://input[@value='user']
    Wait Until Element Is Visible    id:okayBtn
    Select From List By Value    xpath://select[@class='form-control']    teach

18. Handling Alerts checkboxes of Login form with Selenium Libraries
Select CheckBox 
    Select Checkbox    terms
    Checkbox Should Be Selected    terms
	
19. Handling Child windows and tabs with Robot Selenium framework
Navigating to child page 
And Extracting Email
Library String 

 Select the link of Child window
    Verify the user is Switched to Child window
    Grab the Email id in the Child Window
    Switch to Parent window and enter the Email
   
*** Keywords ***
Select the link of Child window
    click element       css:.blinkingText
    Sleep               5

Verify the user is Switched to Child window
    switch window       NEW
    Element Text Should Be       css:h1     DOCUMENTS REQUEST


Grab the Email id in the Child Window
    ${text}=    get text    css:.red
    @{words}=   Split String    ${text}     at
    #0 ->Please email u
    #1-> mentor@rahulshettyacademy.com with below template to receive response
    ${text_split}=      Get From List       ${words}    1
    log     ${text_split}
     @{words_2}=   Split String    ${text_split}
     #0->mentor@rahulshettyacademy.com
     ${email}=      Get From List    ${words_2}    0
     Set Global Variable         ${email}


Switch to Parent window and enter the Email
    switch window       MAIN
    Title Should Be     LoginPage Practise | Rahul Shetty Academy
    Input Text          id:username     ${email}

20. Parsing Get Text Selenium Strings using  Robot String libraries
TestDemo3 files covers this 
Grab the Email id in the Child Window
    ${text}=    get text    css:.red
    @{words}=   Split String    ${text}     at
    #0 ->Please email u
    #1-> mentor@rahulshettyacademy.com with below template to receive response
    ${text_split}=      Get From List       ${words}    1
    log     ${text_split}
     @{words_2}=   Split String    ${text_split}
     #0->mentor@rahulshettyacademy.com
     ${email}=      Get From List    ${words_2}    0
     Set Global Variable         ${email}

####Section 5: Data Driven Testing & Parameterization the  Selenium Tests using Robot Framework
21. How to apply parameterize the test with multiple data sets in Robot framework
testDemo4.robot 

TestTemplate Keyword in Settings 
*** Test Cases ***      username        password
Invalid username        dsahed          learning
Invalid password        rahulshetty     ploudfg
special characters      @#$             learning
Wrap under Keywords instead of testcases 


*** Keywords ***
Validate UnSuccesful Login
    [Arguments]     ${username}     ${password}
    open the browser with the Mortgage payment url
    Fill the login Form    ${username}      ${password}
    wait until it checks and display error message
    verify error message is correct
	
22. How Reporting works and generates in Robot Framework for Test results
7-May-2025
generated by default by robotframework

23. How and where Screenshots generated in Robot framework on test failures
In Robot Framework it automatically creates screenshot
on failure 

24. How to load the data from CSV files into Robot tests -external plugins 
instead of driving data through file 
we can drive using excel
Libraray DataDriver is required for this
install driver library
we can drive data from csv or excel 
Library     DataDriver      file=resources/data.csv     encoding=utf_8   dialect=unix


*** Test Cases ***
Login with user ${username} and password ${password}        xyc     123456
default username and password 
Demo5 file name .

25. Monitoring the Reports and Logs for parameterized tests in the Framwork
Run Demo5 file 

######Section 6: Create custom Selenium keywords from Python Libraries in the Robot Framework
Date###8-May-2025

27. What are Custom User defined keywords? and why should we need them
for python code , we will give custom keyword name .
created customLibraries folder 
Shop.py file 
method name will be converted to keyword 
file name and class name should be same .
Library     ../customLibraries/Shop.py

from robot.api.deco import library, keyword


@library
class Shop:
    @keyword
    def hello_world(self):
        print("Hello")
		
we can use this keyword in our file 
and print we can see in log file 

Now we can use hello_world as keyword

28. How to access Selenium Library instance to Python custom library files
add_items
add items
underscore will be replace with space in robot framework

*** Variables ***
@{listofProducts}           Blackberry      Nokia Edge
Use Built in Robot class 

from robot.api.deco import library, keyword
from robot.libraries.BuiltIn import BuiltIn
class Shop:

    def __init__(self):
        self.selLib = BuiltIn().get_library_instance("SeleniumLibrary")
		
	@keyword
    def add_items_to_cart_and_checkout(self, productsList):
		self.selLib.get_webelements(" css:.card-title")
        
29. Step by step procedure to create custom Python library keywords with example
Usually architects will write custom keywords
 @keyword
    def add_items_to_cart_and_checkout(self, productsList):
        # Get WebElements
        i = 1
        productsTitles = self.selLib.get_webelements(" css:.card-title")
        for productsTitle in productsTitles:
            if productsTitle.text in productsList:
                self.selLib.click_button("xpath:(//*[@class='card-footer'])["+str(i)+"]/button")

            i = i + 1

        self.selLib.click_link("css:li.active a")

Section 7: Implementing Page object Design Pattern to organize the Robot Test files
Date###8-May-2025

30. How to implement Page objects for Robot framework tests
Generic.robot - replaced with (resource.robot)
PO folder - LandingPage.robot 
ShopPage.robot 

31. Writing page objects for Robot Selenium tests and moving objects to PO folders

32. Build end to end Scenario of Ecommerce app with Robot Selenium framework

Section 8: Parallel Test execution & reporting in the Robot Framework with Pabot plugin

33. How to run all the tests from the folder from Robot command Line
robot .
it will run all the testcases in the folder 
it will get executed in sequence 
pip install robotframework-pabot 

to run execute command
pabot [path to test file]
In parallel we will save time 


34. How to run all the Robot files tests parallel in framework - pabot plugin
running testcases in single file in parallel
pabot --testlevelsplit [path to tests]
firefox --geckodriver 
edge driver 


Section 9: Implement Tagging , filters and CI/CD Jenkins Integration for Automation tests

35. How to implement tagging to Robot tests and execute test by its name
to run specific testcase 
robot -t "Validate unsuccessful login" testDemo2.robot 
using regular expression 
robot -t "Validate*" testDemo2.robot 

Below keyword add tags
Validate Successful Login 
	[Tags]	Smoke	Regression 
	
robot --inclued Smoke .
to run all Smoke testcases in current folder 

36. Execute Robot test cases with Multiple tag controls AND OR for better control
robot --include <tagname1> AND <tagname2>
robot --include <tagname1> OR <tagname2>

Exclude the tests by tag 
robot --exclude <tagname>

Execute only failed testcases 
robot --rerunfailed output.xml


37. How to set variable values from Run time command arguments to Robot framework
********Interview Questions mentioned in this lecture *******
robot --variable browser_name firefox
robot --variable browser_name firefox --include SMOKE testfile.robot
How do you share data between one keyword and another keyword ?

Set Global Variable	${Email}
Changing the scope of variable 


Section 10: Guideline to perform API Testing with Robot Framework
Date###9-May-2025

41. What are Dictionaries in Python? How robot framework creates Dict
*** Settings ***
Library       Collections
Library       RequestsLibrary

*** Variables ***
${base_url}         https://rahulshettyacademy.com
${book_id}
${book_name}        RobotFramework

*** Test Cases ***
Play around with Dictinoary
    [Tags]      API
    &{data}=    Create Dictionary      name=rahulshetty     course=robot       website=rahulshettyacademy.com
    log     ${data}
    Dictionary Should Contain Key     ${data}     name
    log     ${data}[name]
    ${url}=     Get From Dictionary     ${data}     website
    log   ${url}
	
42. Performing API Testing POST call with Robot Framework keywords

commit in rebasedemo
rebase3
rebase3  change3