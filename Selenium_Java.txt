-Project creation 
maven project 

https://demo.nopcommerce.com/
https://opensource-demo.orangehrmlive.com/web/index.php/auth/login
http://www.deadlinkcity.com/
https://www.opencart.com/-register page 
https://rahulshettyacademy.com
https://rahulshettyacademy.com/loginpagePractise
https://rahulshettyacademy.com/seleniumPractise/#/offers
https://rahulshettyacademy.com/AutomationPractice/
https://rahulshettyacademy.com/client
https://rahulshettyacademy.com/client/
https://the-internet.herokuapp.com/login
https://the-internet.herokuapp.com/login
https://the-internet.herokuapp.com/javascript_alerts`
https://demo.automationtesting.in/Frames.html
https://money.rediff.com/indices/nse/nifty-50
https://jqueryui.com/datepicker/
https://www.countries-ofthe-world.com/
https://www.sitepoint.com/mime-types-complete-list/
https://www.dummyticket.com/dummy-ticket-for-visa-application/

testautomationpractice.blogspot.com
itera-qa-azurewebsites.net/home


https://testautomationpractice.blogspot.com/

.com/

-Create New maven project .
-archetype.
-maven-archetype-quickstart 
Org.apache.maven.archetypes - maven-archetype-quickstart
Apahe -1.5 during dec 24
It took around 10-15 mins for new project

-artifact id is project name -SeleniumFrameworkDesing
-group id ? company - like  - rahulshettyacademy
package  -it will be auto constructed by using above details.
observe - src/main/java
src/test/java
Pom.xml

It is interactive mode . Press Yes

It took 20 mins to create maven project .

we can publish project to maven 
go to maven repo.

Add Selenium and TestNG Dependency 

driver.navigate.back
driver.manager
driver.geturl
driver.close
Thread.sleep 

WebElement staticDropdown = driver.findElement(By.id("ctl00_mainContent_DropDownListCurrency"));
Select dropdown = new Select(staticDropdown);
dropdown.selectByIndex(3);
dropdown.getFirstSelectedOption().getText();
Select dropbox = new Select(dropdown);

Handling alerts using driver.switchto methods

Login Page:
https://rahulshettyacademy.com/locatorspractice/

Practice Page:
https://rahulshettyacademy.com/AutomationPractice

Flight booking page 
https://rahulshettyacademy.com/dropdownsPractise/#search.aspx?mode=search

ecommerce page : 
https://rahulshettyacademy.com/seleniumPractise/

New class Fluentwait 
the-internet.herokuapp.com 
https://the-internet.herokuapp.com/


Location 
I:\Learnings\Raghavendra\2023\Introduction\src\practice\GreenKart.java


I:\Learnings\Raghavendra\2023\Introduction\src\practice\OptimizedGreenKart.java

WebDriver driver = new ChromeDriver();
WebDriverWait w = new WebDriverWait(driver,Duration.ofSeconds(5));

driver.findElement(By.xpath("//button[contains(text(),'PROCEED TO CHECKOUT')]")).click();
w.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".promoCode")));
driver.findElement(By.cssSelector(".promoCode")).sendKeys("rahulshettyacademy");
w.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".promoBtn")));
driver.findElement(By.cssSelector(".promoBtn")).click();
		
		
Implicit - Readable code.
Con - Implicit wait might hide performance issues.

		
Advantage - 
wait applied to targeted elements only.no performance issue .

Cons : 
More code .


There is another explicit wait mechanism type called Fluent wait

Explicit wait can be achieved in 2 ways
1.WebDrierWait 
2.FluentWait = 10 seconds , polling 2 seconds
Your card is accepted ( 3 secs ) Your order is being processed ( 7 secs)

Confirmation 

How different is from WebDriver Wait ?

Fluent wait finds the web element repeatedly at regular intervals of time until timeout or till the object gets found 

Unlike WebDriverWait , we need to build customised wait methods based on condition

Both WebDriverWait and FluentWait class implement Wait Interface 

		
Techniquest to automate Ajax calls ,child windows and iFrames 
		
Actions a = new Actions(driver);
WebElement move = driver.findElement(By.cssSelector("#nav-link-accountList-nav-line-1"));
a.moveToElement(move).build().perform();
path	/Introduction/src/AjaxCalls/ActionsDemo.java
		
location	I:\Learnings\Raghavendra\2023\Introduction\src\AjaxCalls\ActionsDemo.java


driver.findElement(By.cssSelector("a[class='blinkingText']")).click();
Set<String> windows = driver.getWindowHandles();
Iterator<String> it = windows.iterator();
String parentId = it.next();
String childId = it.next();
driver.switchTo().window(childId);
			
			
I:\Learnings\Raghavendra\2023\Introduction\src\Assignments\NestedFramesExample.java


Real Time Exercises (end to end Programming )
Print the link counts in the page
https://rahulshettyacademy.com/AutomationPractice

I:\Learnings\Raghavendra\2023\Introduction\src\sec11_RealTimeExamples\FindAllLinks.java

		WebElement footerDriver = driver.findElement(By.id("gf-BIG"));
		System.out.println(footerDriver.findElements(By.tagName("a")).size());
		
				WebElement columnDriver = footerDriver.findElement(By.xpath("//table/tbody/tr/td[1]/ul"));
		System.out.println(columnDriver.findElements(By.tagName("a")).size());
		
		Set<String> abc = driver.getWindowHandles();
		Iterator<String> it = abc.iterator();
		
https://www.path2usa.com/travel-companion/

JavascriptExecutor js = (JavascriptExecutor) driver;
		//js.executeScript("window.Scrollby(0,500)");
		js.executeScript("window.scrollBy(0,800)");
		Thread.sleep(3000);
		js.executeScript("document.querySelector('.tableFixHead').scrollTop=5000");

I:\Learnings\Raghavendra\2023\Introduction\src\sec12_scrolling\ScrollingPageAndTable.java

I:\Learnings\Raghavendra\2023\Introduction\src\sec13_Misc\https_certs.java

Accepting certificates : 
		ChromeOptions options = new ChromeOptions();
		options.setAcceptInsecureCerts(true);
		WebDriver driver = new ChromeDriver(options);
		
Explore Chrome Options to set proxies ,plugins and path on Chrome Browser 

108. Maximising Window and deleting cookies
driver.manage.maximize();
driver.manage.deleteallcookies();
--.deletecookiename();
--.addcookie();
delete session cookie - user should logout.
User should navigate to login page.
Run this test.

Taking screenshots: 
I:\Learnings\Raghavendra\2023\Introduction\src\sec13_Misc\Screenshots.java

		File src = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(src,new File ("I:\\Learnings\\Raghavendra\\2023\\Screenshots\\test1.png"));
		
I:\Learnings\Raghavendra\2023\Introduction\src\sec13_Misc\FindAllBrokenLinks.java
SoftAssert a = new SoftAssert();
a.assertTrue(respCode < 400 , "link with text "+ link.getText()+ " broken with code "+ respCode );
a.assertAll();

Streams :
I:\Learnings\Raghavendra\2023\Introduction\src\javaStreams\NamesStartswithA_Basic.java

long c =names.stream().filter(s -> s.startsWith("a")).count();

names.stream().filter(s -> s.length() > 4 ).forEach(s -> System.out.println(s));
filter , 
count , foreach 

Stream.of("Rama", "def", "India", "Ghanika", "Hamsika").filter(s -> s.endsWith("a")).map(s -> s.toUpperCase()).forEach(s -> System.out.println(s));

List<String> names1 = Arrays.asList("Abhilash", "Taylor", "Asin", "Arnold", "Aasha");
names1.stream().filter(s -> s.startsWith("A")).sorted().map(s -> s.toUpperCase()).forEach(s -> System.out.println(s));

List<String> ls = Stream.of("sita","Rama", "def", "India", "Ghanika", "Hamsika").filter(s -> s.endsWith("a")).map(s -> s.toUpperCase()).collect(Collectors.toList());
System.out.println(ls.get(0));



https://rahulshettyacademy.com/angularpractice/

above element .below element. 
top of element.below element 

driver.getWindowHandles()

driver.get("https://rahulshettyacademy.com/angularpractice/");
				driver.switchTo().newWindow(WindowType.WINDOW);
				driver.get("https://courses.rahulshettyacademy.com/courses/");
				
Framework 1 : TestNG

XML
Run all tests 
Before Method - Class- Suilte
Groups (Smoke)
@DataProvider
@Test (dependsOnMethods = { "OpenBrowser" })
	@Test(groups={"Smoke"})
Exclude tcs using regular expessions 
Mobile * 

Groups has highest priority 
@Test(groups={"Smoke"})

When you use groups , other annotations will get disabled as groups are given priority 

Incase we have bugs .

How to exclude error test cases.


	@Test(enabled= false)
	
 Listeners Interface in TestNG framework
public class Listerners implements ITestListener{
}

Listerner java file and xml file
In Listener file you will impletment what will happen on failure  -pass ect
in xml file you will give details of package and class details 

<suite name="TestNG Parameters Suite" parallel = "tests" thread-count = "2" >
   <test name="Params">
      <parameter name="val1" value="2" />

Framework 2 : Learn Java Object Oriented principles needed for Framework Development.
How TestNG Annotations help with Inheritance to remove boilerPlate code in Test 

super can be used to refer to an immediate parent class instance variable.
super can be used to invoke the immediate parent class method.
super() can be used to invoke immediate parent class constructor.

Super keyword is used only when there is inheritance in place.



Section 18 : Framework Part 1 : Create Maven Project and Prepare Functional End to End Test 

https://rahulshettyacademy.com/client
Register with dummy username and password
qatestrd@qaauto.com
qatestrd@qaauto.com
qatestrd@qaauto.com

Qatestrd@qaauto.com123


I:\Learnings\Raghavendra\2023\SeleniumFrameworkDesign\src\test\java\RdAutomation\SeleniumFrameworkDesign\StandaloneTest.java


Section 19: Framework Part 2 : Design Pattern Page Object and Factory Implementation.

Page Object 
Page Factory 
Abstract components - Reusable code 

All above classes are in src/main/java

Actual code in src/main/test s

Section 20 : Framework Part 3 - Test Configuration Methods and Global Properties and Parallel Runs.

src/main/java
Resources
Global properties - which browser test will run 
GlobalData.properties 

In Base Test We have initialized web driver .
it is in src/test/java - test components s

Launching and Closing application in Base Test 
error validations 
s
I:\Learnings\Raghavendra\2023\SeleniumFrameworkDesign\src\test\java\RdAutomation\SeleniumFrameworkDesign\ErrorValidations.jav
a

TestNG files are kept in TestSuite folder
we can use grouping for TCs to run 


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test parallel="tests" thread-count="4" name="ParallelTest">
    <classes>
      <class name="RdAutomation.SeleniumFrameworkDesign.TestComponents.BaseTest"/>
      <class name="RdAutomation.SeleniumFrameworkDesign.ErrorValidations"/>
      <class name="RdAutomation.SeleniumFrameworkDesign.eCommerceSubmitOrders"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


Running tests in parallel s
s

Section 21 : Framework Part 4 : Test Strategy - Control Tests Execution - Run Parallel Test.

Integration of Hashmap to DataProvider to send the data as one Hash object 

data 
purchaseorder.json 
data reader.java file 

Build  a utility - that will work for all tcs . that is beauty of framework.

Run the test .

Here data driven from external file .and parameterized using TestNG.

Sending data from Json file 

How to create Screenshot Utility in BaseTest class for catching Failed tests.

IN Base test . capturing screenshot logic is written

Section 22 : Framework Part 5 : Extent HTML Reports and TEST NG Listeners & ThreadSafe Execution 

Framework ##
Different componenets we have in automation framework 

--test data 
--test reporting 
--unit test [testng]
--Utility [Common practices we can use across diff projects like capturing screenshot,waiting for specific web call
--Build Tool
--Runnin tool - CI - Jenkins 
--Version Control - Jenkins 
--

######Python###########
17-May-2025

What is WebDriver?
--Webdriver is one of the component of selenium
--Webdriver is module

--WebDriver is API Interface 
 
Firfox browser - Firefox()
Edge Browser - Edge()
Chrome - Chrome


Selenium client Library ( Java,Python , Ruby , C#)
Json
W3C
 
---------------
Architecture of WebDriver
----------------
Selenium 3
--------
Selenium Language bindings - JSON wire protocol - browser drivers - w3c - Browsers


Selenium 4	
--------
Selenium Language bindings - w3c - browser drivers - w3c - Browsers


Setup and configure webdriver in pycharm 
-----------------------------------------
pre-req
------
	python
	pycharm 
	Download browser specific drivers 
	set up selenium webdriver 
	installing packages- 2 ways
	--in project setttin
	--using pip command line 

Service object 

find_element(By.ID, "id")
find_element(By.NAME, "name")
find_element(By.XPATH, "xpath")
find_element(By.LINK_TEXT, "link text")
find_element(By.PARTIAL_LINK_TEXT, "partial link text")
find_element(By.TAG_NAME, "tag name")
find_element(By.CLASS_NAME, "class name")
find_element(By.CSS_SELECTOR, "css selector")

---------------
Session 1 code :
-----------------
def test_chrome():
    driver = webdriver.Chrome()
    driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login")
    time.sleep(20)
    driver.find_element(By.NAME,"username").send_keys("Admin")
    driver.find_element(By.NAME,"password").send_keys("admin123")
    driver.find_element(By.XPATH, '//button[text()=" Login "]').click()
    act_title=driver.title
    time.sleep(5)
    exp_title="OrangeHRM"
    driver.close()	
	
	
	
Service object 
#serv_object = Service("C:\\Drivers\\Chromedriver\\chrome-win32\\chrome.exe")
#driver = webdriver.Chrome(service=serv_object)


C:\Drivers\Chromedriver\chrome-win32\chrome.exe
------------------
Locators
----------------
id,
name,
LinkText,
PartialLinkText,
class name,
tag name

Customized Locators :
css selector : tag and id,tag and class ,tag and attribute , tag-class and attribute 
xpath : absolute xpath , relative xpath 

Links - a - anchor tag - href - hyperlink reference
Image - img
Dropdown - select 
input - input 

https://demo.nopcommerce.com/

--Identify Element
--Action 

Inner Text 
Link Text will be there whenever there is anchor tag

Register - LinkText
Partial LinkText "Reg"
Partial LinkText "ter"

driver.find_element(By.LINKED_TEXT,"username")
driver.find_element(By.PARTIAL_LINKED_TEXT,"user")
This is case sensitive 

Int-Qns###########Find number of links in all page 
Find all links
links = driver.find_elements(By.TAG_NAME,"a")
print(len(links)

automationpractice.com/index.php

Int-Qns############How to find multiple locatores 
Ans: Either class name or tag name

def test_locators():
    #driver = webdriver.Firefox()
    driver = webdriver.Chrome()
    driver.get("https://demo.nopcommerce.com/")
    time.sleep(20)
    links=driver.find_elements(By.TAG_NAME,"a")
    print("######Links#######")
    print(len(links))
    #sublist - toggle
    sub_titles=driver.find_elements(By.CLASS_NAME,"first-level")
    print("######SubTitles#######")
    print(len(sub_titles))
	
CSS Selectors :
--------------
1)tag id 	tagname#valueofId	input#email #email
2)tag class		tagname.valueofClass 	input.inputtext .class
3)tag attribute tagname[attribute=value]

--------------------
L3 - XPATH |18 May 2025
----------------------
-Absolute(Full)
Ex:/html/body/nav/div/div/ul/li[4]/a
-Relative(Partial)
Ex://*[@id="navbarSupportedContent"]/ul/li[4]/a



xpath
------
--XPath is defined as XML path.
--It is a syntax or language for finding any element on the web page using XML path expression.
--XPath is used to find the location of any element on a webpage using HTML DOM structure. 
--XPath can be used to navigate through elements and attributes in DOM.
--XPath is an address of the element.



Int-Qns############
Diff between relative and absolute xpath:
---------------------------------------
1)Absolute xpath starts from root html
  Relative xpath directly jumps to element on DOM 
  
2)Absolute xpath starts with /
	Relative xpath starts with //
	
3)In absolute xpath we specify only tags / nodes 
	In relative xpath we use attributes 
	
	
How to writh xpath manaully 
---------------------------
bottom to top approach
/html/body/div[6]/div[1]/div[1]/div[2]/div[1]/ul/li[1]/a

syntax of writing relative xpath
--------------------------------
//tagname[@attribute='value]
//*[@attribute='value]

How to capture xpath automatically
-----------------------------------
1)Right click on element - inspect -hightlight html code - right click - copy xpath
2)Selector hub - extension 

2 reasons to prefer relative xpath:
------------------------------------
1)if developer introduces new element then absolute xpath will be broken
/html/body/div[6]/div[1]/div[1]/div[2]/div[1]/ul/li[1]/a
2)if developer change the location then absolute xpath will be broken
absolute xpath is unstable 
 
Int-Qns###########
Which xpath is preferred ? why 
relatitve 

xpath options
---------------
and
or 
contains()
starts-with()
text()

//tag[@attribute1='value1' or @attribute2='value2']
//tag[@attribute1='value1' and @attribute2='value2']
//input[contains(@id,'search')]
//a[contains(text(),'India')]
//a[text()='Women'] 
//button[starts-with(@name='submit')]



-------------------------
L4---------------19 May 2025
--------------------------
Xpath axes - to traverse in the dom 

self 
parent 
child 
ancestor 
descendent 


5:20 Good explanation diagram 
https://www.youtube.com/watch?v=XL2pU5y3Kf8&t=3603s


following 
following sibling 
preceding 
preceding sibling 


14:06 - Tabular explanation 

child - //tagname[@attribute='value']/child::tagname 
parent - //tagname[@attribute='value']/parent::tagname 

following //tagname[@attribute='value']/following::tagname 
preceding //tagname[@attribute='value']/preceding::tagname 

ancestor //tagname[@attribute='value']/ancestor::tagname
descendent //tagname[@attribute='value']/descendent::tagname

following sibling //tagname[@attribute='value']/following-sibling::sibling
					tag[@attribute='value']
preceding sibling //tagname[@attribute='value']/preceding-sibling::sibling
					tag[@attribute='value']
					
https://money.rediff.com/indices/nse/nifty-50

Print all row date from table 


-------------------------
L5---------------19 May 2025
--------------------------
1)Application commands
2)Conditional commands 
3)browser commands
4)navigational commands
5)wait commands 

1)Application commands:
--------------------
get - get application url 
title - to capture current title 
current url - 
page source - 
driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login")
print(driver.title)
print(driver.current_url)


2)Conditional commands :
-------------------------
is_displayed()
is_enabled()
is_selected()--for radio buttons and checkboxes 

driver.get("https://demo.nopcommerce.com/register?returnUrl=%2F")
searchbox = driver.find_element(By.XPATH,"//input[@id='small-searchterms']")
print("enable status",searchbox.is_enabled())
print("selected status",searchbox.is_selected())

#Radio buttons 
driver.get("https://demo.nopcommerce.com/register?returnUrl=%2F")
male_radio_button = driver.find_element(By.XPATH,"//input[@id='gender-male']")
female_radio_button = driver.find_element(By.XPATH,"//input[@id='gender-female']")
time.sleep(3)
print("Before radio button click ")
print(male_radio_button.is_selected())
print(female_radio_button.is_selected())
time.sleep(3)
male_radio_button.click()
print("After radio button click ")
print(male_radio_button.is_selected())
print(female_radio_button.is_selected())

3)Browser commands 
----------------------
Close - closes one browser at a time - parent (where driver focused)
Quit  - closes all browser window -killing the driver process)

4)Navigational commands
----------------------------
Back 
Forward 
Refresh 

driver.back()
driver.forward()
driver.refresh()
try with amazon and flipkart com 


find element (vs) find elements 
find element - return single web element
find elements - return list of web elements 

1)Locator matching with single element
2)Locator maching with multipe elements
3)Element not available throws - No such element exception 

find all links in footer section 
elements = driver.find_elements.(By.XPath."//div[@class='footer']a")
print(elements.text)


Int-Qns###########
Exceptions : 
No such element exception . If unable to locate element 

find_elements will not return any exception , as it returns 0 lenght list 

text vs get_attribute('value')
to clear value in text box use element.clear() method 
when to use text and when to use get_attribute()

text will always return inner text of the element .
Most of the times links will have inner text 
get_attribute('value') - practice 
here 'value' is attribute , it can be name , id or value anything !

web_element.text
web_element.get_attribute('value')


-------------------------
L6---------------20 May 2025
--------------------------
Synchronization Related
Wait - 2 types
Implicit wait
Explicit wait 
IN java there is fluent wait also , but not avaialble in python 

driver.implicitly_wait(15)

wait commands
time.sleep(time in seconds) Adv
1) simpel to use
DisAdv
1) performance of the script is very poor
2) If the element is not available within the time mentioned still there is a chance of getting exception.


1) implicit wait
Adv
1) Single statement
2) Performance will not be reduced. (If the element is available within the time it proceed to execute further statements.

Dis
|---
2) If the element is not available within the time mentioned, still there is a chance of getting exception.
2) explicit wait

Explicit wait works based on condition...
Adv
More effectively works.
Dis
---
Multiple places
feel some difficulty



expected conditions as EC 

mywait=WebDriverWait (driver, 10) # explicit wait declaration # basic
driver.get("https://www.google.com/")
driver.maximize_window()
searchbox=driver.find_element(By.NAME, 'q')
searchbox.send_keys("Selenium")
searchbox.submit()
searchlink=mywait.until(EC.presence_of_element_located((By.XPATH, "//h3[text()='Selenium']")))|
searchlink.click()
driver.quit()

Try Launching : 
https://demo.nopcommerce.com/
Click on Login Link -wait for this element and then click 

T

mywait-WebDriverWait (driver, 10,poll frequency = 2 ,ignoredExceptions = No Such Element Exception,
				Element not visible exception,
				Element not selectable exception ,
				Exception)
			
			
itera-qa.azurewebsites.net/home

import time

from selenium import webdriver
from selenium.webdriver.common.by import By
#from selenium.webdriver.support.select import Select
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC, select

driver = webdriver.Chrome()
driver.get("https://demo.nopcommerce.com/")
mywait = WebDriverWait(driver,20)
searchbox = mywait.until(EC.presence_of_element_located((By.XPATH,"//*[@id='small-searchterms']")))
searchbox.send_keys("Test")
time.sleep(5)
driver.close()



-------------------------
L7---------------22 May 2025
--------------------------
Chekcbox
is selected 
get all checkboxes and conditionally select using if loop and for loop

Links:
--------
Internal-same page
External - 
Broken link 

website : nopcommerce
--a  - link 
-href means  hyperlink

Int-Qns###########
How to handle broken links ?

use deadlinkcity.com for broken links testing 
http://www.deadlinkcity.com/

import request module to package 
to test apis


dropdown :
------------
test with opencart.com
tagname of link - a
tagname of image - img
tagname of dropdown - select 
tagname of label - label 
select contains options : 

https://www.opencart.com/-register page 
https://www.opencart.com/

element = driver.find_element(By.XPATH,"")
drop_down_object = select(element)

#select option from dropdown 
drop_down_object.select_by_visible_text("case sensitiev")

print all the options : 
select particular option 

testautomationpractice.blogspot.com
itera-qa-azurewebsites.net/home


https://testautomationpractice.blogspot.com/


-------------------------
L8---------------22 May 2025
--------------------------
1,Alerts/Popups
2.Authentication pop up
3.Frames/ iFrames
4.Browser Windows.

https://the-internet.herokuapp.com/javascript_alerts

https://demo.automationtesting.in/Frames.html

Alerts/Popups
--------------
myalert = driver.switch_to.alert
myalert.text
myalert.accept()
myalert.dismiss()

Authentication popup
--------------------
http://the-internet.herokuapp.com/basic_auth

Syntax : http://username:password@test.com

Example : http://admin:admin@the-internet.herokuapp.com/basic_auth

automationpractice.blogspot.com


3.Frames/ iFrames
------------------

frame 
iframe
form 
inner frames 

4.Browser Windows.
------------------
windowIDs = driver.window_handles
parentwindowid = windowIDs[0]
childwindowid  = windowIDs [1]
driver.switch_to.window(childwindowID)
driver.stitch_to_window(parentwindowID)

switchto window based on page title .
use orangehrm demo website for practice 

-------------------------
L9---------------23 May 2025
--------------------------
Disable in app notifications 
--------------------------------
ops = webdriver.ChromeOptions()
ops.add_argument("--disable notifications")
serv_object = Service("C"\\Drivers\\Chromedriver\\chrome-win32\\chrome.exe")
driver.webdriver.chrome(service = serv_object,options = ops )
driver.get("https://whatmylocation.com/")
driver.maximize.window()


webtable
---------
static -same data 
dyanmaic -diff data 
https://money.rediff.com/indices/nse/nifty-50
table
thead
tbody
tr - means table row 
th - header of table 
td - table data 

#Count number of rows and columns in table 
#Read specific row and column data 
#Read all the rows and column data 
#Read data based on conditions (List book names whose author is Mukesh)

def test_3_number_of_rows():
    driver = webdriver.Chrome()
    driver.implicitly_wait(10)
    driver.get("https://money.rediff.com/indices/nse/nifty-50")
    time.sleep(10)
    text_var=driver.find_elements(By.XPATH,"//table[@class='dataTable']//tr")
    print(len(text_var))
    for ele in text_var:
        print(ele.text)
		
Dynamic Table :
----------------
https://opensource-demo.orangehrmlive.com/
Admin - usermanagement - we have dynamic table 


-------------------------
L10---------------27 May 2025
--------------------------
Date Picker  
--------------------------------
1)Standard [radio button , checkbox ]
2)Non Standard (customized ) - Datepicker 
According to design we have to write date picker 
https://jqueryui.com/datepicker/
we can use sendkeys method sometimes [ 90% of time it works ]
#mm/dd/yyyy format 
driver.find_element(By.XPATH,"").click()
month=march
year = 2024
day = 12

while True:
	month_ele = driver.findElement().text
	year_ele= driver.findElement().text 
	if month_ele==month and year == year_ele :
		break ; 
	else :
		click next arrow 
		
#
Now capture all dates from table : 
use for and if loop to match with expected date 

#In travel websites 
we have to select onlyfuture dates so > keyword
# In date of birth we have to select old dates only so we click on < 

Date picker one more example : 
----------------------------
Drop down type date picker 


-------------------------
L11---------------27 May 2025
--------------------------
Mouse operations  
--------------------------------
a- Mouse Hover - move to elemene(element).click().perform()
b- Right Click -act.context_click(button).perform()
c- Double Click-act.double_click(button).perform()
d- Drag&Drop -act.drag_and_drop(source_ele,target_ele).perform()
	
2- Sliders
act.drag_and_drop_by_offset(min_slider,100,0).perform()
act.drag_and_drop_by_offset(element,100,0).perform()
act.drag_and_drop_by_offset(min_slider,-39,0).perform()

3- Scrolling Page	- driver.execute_script("java script commands")


a- Mouse Hover
--------------
ActionsChains class 

demo orange hrm website 
Admin options for mouse hover 

act = ActionChains(driver)
act.draganddrop
act.doubleclick
act.movetoelemenet
act.clickandhold
act.move_to_element(admin).move_to_element(usermanagement).moveToElement(users).click().perform()

Create an action 
and then perform()


RightClick
-----------
button=some_element
act = ActionChains(driver)
act.context_click(button).perform()

DoubleClick
-----------
button=some_element
act = ActionChains(driver)
act.double_click(button).perform()

DragAndDrop
-----------
source_ele=element
target_ele=element
act = ActionChains(driver)
act.drag_and_drop(source_ele,target_ele).perform()


2- Sliders
----------
min_slider  = element
max_slider  =element 
print location of slider before and after moving 
min_slider.location
max_slider.location 
it will give x and y co -ordinates 

act = ActionChains(driver)
act.drag_and_drop_by_offset(min_slider,100,0).perform()
act.drag_and_drop_by_offset(min_slider,-39,0).perform()

3- Scrolling Page	
https://www.countries-ofthe-world.com/
Scroll cannot be done in application 
or browser 
Scroll is java script statement 
3 ways :
##1)based on pixel
driver.execute_script("window.scrollby(0,3000)" ,"")
driver.execute_script("return window.pageofset)
we can also check how much scrollbar is moved 

###2)based on element
Scroll down element till page is visible 
element=driver.findelement()
driver.execute_script("arguments[0].scrollintoview();",element) 

###3)scroll element till end of page 
driver.execute_script("window.scrollby(0,document.body.ScrollHeight)" ,"")

###4)scroll element till top of page 
driver.execute_script("window.scrollby(0,-document.body.ScrollHeight)" ,"")


-------------------------
L12---------------28 May 2025
--------------------------
Keyboard actions , it uses same ActionChains class
--------------------------------------------------
How to download files 
How to upload files 
#ctrl + A
#ctrl + C
#tab
#ctrl + V
Create ActionsChains object 
act = ActionChains(driver)

#ctrl + A
act.keys_down(Keys.Control)
act.send_keys("a")
act.key_up(Keys.CONTOL)
act.perform()

we can also write above statements in single statement.

#ctrl + C
act.keys_down(Keys.CONTROL)
act.send_keys("c")
act.key_up(Keys.CONTOL)
act.perform()

#tab 
act.send_keys("tab").perform()

How to download files 
-------------------------
element.click()
downloads file in default location configured in browser

-if we need to download in specific path 

below code is to download file in desired location
import os
location = os.getcwd()

def chrome_setup():
	driver set up code 
	#preferences = {"download.default_directory": "path where you want to download"}
	preferences = {"download.default_directory": location}
	ops = webdriver.Chromeoptions()
	ops.add_experimental_option("prefs",preferences)
	driver = webdriver.chromeoptions(service=serv_obj,options=ops)
	return driver

chrome and edge is same 
in firefox we need to specify mime type 

How to download pdf file ?
----------------------------
modify preference 
preferences = {"download.default_directory": location,"plugins.always_open_pdf_file_externally": True}

mime type "application/pdf" we need to handle in firefox

chrome and edge is same .
but firefox it is slightly different 

Mimetype:
https://www.sitepoint.com/mime-types-complete-list/
https://www.sitepoint.com/mime-types-complete-list/

upload files:
-------------
click on upload button .
agian find element of upoad link . 
use.
element.send_keys("Locaiton of file ")

Manual testing is recommended for file upload and file download
as we need to verify file contents also 


-------------------------
L13---------------28 May 2025
--------------------------
session contents:
1- how to handle bootstrap Dropdown[ not like select class it contains other tag]
2- how to capture Screenshots
3- how to open new tab& new window
4- how to handle cookies
5- Headless Mode Execution

1- how to handle bootstrap Dropdown
---------------------------------------
dropdown which does not have select class 
https://www.dummyticket.com/dummy-ticket-for-visa-application/
https://www.dummyticket.com/dummy-ticket-for-visa-application/
li - list item 
Get the locator :
of dropdown 
find all the li elements using find_elements method 
loop over contries 
and select the required country 
web_element.text = toget the country name 

2- how to capture Screenshots
------------------------------
driver.save_screenshot("file location you want to save")
driver.save_screenshot(os.getcwd+"homepage.png")
driver.get_screenshot_as_file(os.getcwd+"homepage.png")
python is easy - selenium has 5-6 lines of code 

3- how to open new tab& new window
-------------------------------------
like open link in new tab
nopcommerce register link 
https://demo.nopcommerce.com/

element 
reglink = Keys.CONTROL+Keys.RETURN
element.send_keys(reglink) 

#Selenium 4 - opens a new tab and switches to it 
driver.get("url1")
driver.get("url2")
it will load 1st url and then the second url 

driver.get("url1")
driver.switch_to_new_window('tab')
driver.get("url2")

driver.get("url1")
driver.switch_to_new_window('window')
driver.get("url2")

swith_to_widow is diff method  where we need to provide id 

4- how to handle cookies
--------------------------
cookie name 
cookie expiry 
cookie info will be dynamic 

nopcommerce website used here 
cookie info we need to store in dictionary object 

printing details of cookies in website 
cookies= driver.get_cookies()
len(cookies) = 4 
print info of cookie using for loop 
get name of cookie 
https://demo.nopcommerce.com/
#Add new cookie to the browser : 
driver.add_cookie({name:mycookie,value=somevalue})

get size of cookies after adding cookie 

#Delete specific cookie from browser : 
driver.delete_cookie()

#delete all cookies 
driver.delete_all_cookies()


5- Headless Mode Execution
----------------------------
1-we can do other activities , and script will be running in background
2-Performance will be good 

create 2 new files for firefox,chrome and firefox 
drive.gettitle
driver.current_url 

def headless_chrome():
	serv_object = Service("path")
	ops = webdriver.ChromeOptions()
	ops.headless=True
	driver=webdriver.Chrome(service=serv_object,options=ops)
	
driver = headless_chrome()
try this 
get url 
and current title 

we can try for edge also 

ChromeOptions[service,headless,preferences to save screenshot]

-------------------------
L14---------------28 May 2025
--------------------------
Data driven testing : 
Session Contents:
1- Read Data from Excel
2- Write Data into Excel
3- Data Driven Test

-------------------------
L15---------------28 May 2025
--------------------------
mysql database connection related 


##################Framework Releated#######################
Part 1 : pytest : unit testing framework for python 
Part 2 : Framework Design overview and setting up browser instance fixtures 

88. Understand implementing Browser Instance fixture from global conftest file

conftest.py file - pytest will always listens to this file 
create conftest.py file in directory 
it should contain 

@pytest.fixture(scope="function")
def browserInstance():
	it will run code and give data back 
	launch browser 
	implicit wait here
	yield driver 
	
filename = test_e2eTestFramework.py
def test_e2e(browserInstance);
	driver = browserInstance
	
89. Command line options to drive the environment variables at run time into test
pytest test_e2e.python --browser_name firefox 
def browserInstance(request):

this parameter if default which will hold browser_name from command line 

def browserInstance(request):
	request.config.getoption("--browser_name")
	it will run code and give data back 
	launch browser 
	implicit wait here
	yield driver 
	
we need to register this options 
pytest in conf test file .

def pytest_addoption(parser):

90. Understand how setup and teardown works with Pytest fixtures for Browser tests